/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/scripts/preferencias.js":
/*!*************************************!*\
  !*** ./src/scripts/preferencias.js ***!
  \*************************************/
/***/ (() => {

eval("var db = {};\r\n\r\nwindow.onload = function () {\r\n\twindow.indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n\twindow.IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction || window.msIDBTransaction;\r\n\twindow.IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange || window.msIDBKeyRange;\r\n\t\r\n\tvar DBOpenRequest = window.indexedDB.open(\"tourmaline\", 1);\r\n\r\n\tDBOpenRequest.onsuccess = function(event) {\r\n\t\tdb = DBOpenRequest.result;\r\n\t\tdisparaListeners();\r\n\t\tdisplayPreferencia();\r\n\t\tdisplayCategoriaList();\r\n\t\tdisplayFaixaList();\r\n\t}\r\n\t\r\n\tDBOpenRequest.onupgradeneeded = function(event) {\r\n\t\tdb = event.target.result\r\n\r\n    \tdbUpgrade(db);\r\n\t}\r\n};\r\n\r\nfunction disparaListeners() {\r\n\tvar botaoAtivar = document.getElementById(\"botaoAtivar\");\r\n\tvar exUrl = document.getElementById(\"exUrl\");\r\n\tvar exTitulo = document.getElementById(\"exTitulo\");\r\n\tvar exMeta = document.getElementById(\"exMeta\");\r\n\tvar exConteudo = document.getElementById(\"exConteudo\");\r\n\tvar hoInicial = document.getElementById(\"hoInicial\");\r\n\tvar hoFinal = document.getElementById(\"hoFinal\");\r\n\tvar botaoSelecionar = document.getElementById(\"botaoSelecionar\");\r\n\tvar botaoSalvar = document.getElementById(\"botaoSalvar\");\r\n\tvar botaoPersonalizar = document.getElementById(\"botaoPersonalizar\");\r\n\tvar botaoSenha = document.getElementById(\"botaoSenha\");\r\n\tvar botaoUpdate = document.getElementById(\"botaoUpdate\");\r\n\r\n\tbotaoAtivar.onchange = function (event) {\r\n\t    console.log(\"Ativar ...\");\r\n\t    var transaction = db.transaction(['preferencia'], 'readwrite');\r\n\t\tvar objectStore = transaction.objectStore('preferencia');\r\n\t\tvar request = objectStore.get(1);\r\n\t\t\r\n\t\trequest.onsuccess = function(evt) {\r\n\t\t\tvar value = request.result;\r\n\t\t\tvalue.ativo = event.target.checked;\r\n\t\t\tobjectStore.put(value);\r\n\t\t};\r\n\t};\r\n\t\r\n\texUrl.onchange = function (event) {\r\n\t    console.log(\"Ativar ...\");\r\n\t    var transaction = db.transaction(['preferencia'], 'readwrite');\r\n\t\tvar objectStore = transaction.objectStore('preferencia');\r\n\t\tvar request = objectStore.get(1);\r\n\t\t\r\n\t\trequest.onsuccess = function(evt) {\r\n\t\t\tvar value = request.result;\r\n\t\t\tvalue.exUrl = event.target.checked;\r\n\t\t\tobjectStore.put(value);\r\n\t\t};\r\n\t};\r\n\t\r\n\texTitulo.onchange = function (event) {\r\n\t    console.log(\"Ativar ...\");\r\n\t    var transaction = db.transaction(['preferencia'], 'readwrite');\r\n\t\tvar objectStore = transaction.objectStore('preferencia');\r\n\t\tvar request = objectStore.get(1);\r\n\t\t\r\n\t\trequest.onsuccess = function(evt) {\r\n\t\t\tvar value = request.result;\r\n\t\t\tvalue.exTitulo = event.target.checked;\r\n\t\t\tobjectStore.put(value);\r\n\t\t};\r\n\t};\r\n\t\r\n\thoInicial.onchange = function (event) {\r\n\t    console.log(\"Ativar ...\");\r\n\t    var transaction = db.transaction(['preferencia'], 'readwrite');\r\n\t\tvar objectStore = transaction.objectStore('preferencia');\r\n\t\tvar request = objectStore.get(1);\r\n\t\t\r\n\t\trequest.onsuccess = function(evt) {\r\n\t\t\tvar value = request.result;\r\n\t\t\tvalue.hoInicial = event.target.value;\r\n\t\t\tobjectStore.put(value);\r\n\t\t};\r\n\t};\r\n\t\r\n\thoFinal.onchange = function (event) {\r\n\t    console.log(\"Ativar ...\");\r\n\t    var transaction = db.transaction(['preferencia'], 'readwrite');\r\n\t\tvar objectStore = transaction.objectStore('preferencia');\r\n\t\tvar request = objectStore.get(1);\r\n\t\t\r\n\t\trequest.onsuccess = function(evt) {\r\n\t\t\tvar value = request.result;\r\n\t\t\tvalue.hoFinal = event.target.value;\r\n\t\t\tobjectStore.put(value);\r\n\t\t};\r\n\t};\r\n\r\n\tbotaoPersonalizar.onclick = function () {\r\n\t    console.log(\"Personalizar ...\");\r\n\t    window.frameElement.ownerDocument.location.href =\"opcoes.html?op=5\";\r\n\t}\r\n\t\r\n\tbotaoSenha.onclick = function () {\r\n\t    console.log(\"Senha ...\");\r\n\t    var senhaAtual = document.getElementById(\"senhaAtual\");\r\n\t    var senhaNova = document.getElementById(\"senhaNova\");\r\n\t    var senhaConfirma = document.getElementById(\"senhaConfirma\");\r\n\t    if (senhaAtual.value != null) {\r\n\t    \tvar transaction = db.transaction(['user'], 'readwrite');\r\n\t    \tvar objectStore = transaction.objectStore('user');\r\n\t    \tvar request = objectStore.get(\"admin\");\r\n\t    \t\r\n\t    \trequest.onsuccess = function(evt) {\r\n\t    \t\tvar value = request.result;\r\n\t    \t\t\r\n\t    \t\tif (value.senha == senhaAtual.value) {\r\n\t    \t\t\tif (senhaNova.value != senhaConfirma.value) {\r\n\t    \t\t\t\talert(\"Senhas não conferem!\");\r\n\t    \t\t\t} else {\r\n\t\t    \t\t\tvalue.senha = senhaNova.value;\r\n\t\t    \t\t\tobjectStore.put(value);\r\n\t\t    \t\t\talert(\"Senha Alterada com Sucesso!\");\r\n\t    \t\t\t}\r\n\t    \t\t} else {\r\n\t    \t\t\talert(\"Senha Inválida!\");\r\n\t    \t\t}\r\n\t    \t\t\r\n\t    \t};\r\n\t    }\r\n\t}\r\n\t\r\n\tbotaoUpdate.onclick = function () {\r\n\t\tvar siteTotal;\r\n\t\tvar categoriaTotal;\r\n\t\tvar palavraTotal;\r\n\t\tvar lbStatus = document.getElementById(\"lbStatus\");\r\n\t\tlbStatus.innerHTML = \"Atualizando 0/4 Iniciando ...\";\r\n\t\t\r\n\t\tgetJSON('http://curupira.local:8080/index.php?r=faixa/chrome-index').then(function(data) {\r\n\t\t\tvar transaction = db.transaction(['faixa'], 'readwrite');\r\n\t    \tvar faixaStore = transaction.objectStore('faixa');\r\n\t    \tvar request = faixaStore.clear();\r\n\t    \t// report the success of our clear operation\r\n\t    \trequest.onsuccess = function(event) {\r\n\t\t    \tfor (var i in data.faixa) {\r\n\t\t    \t\tvar categorias = new Array();\r\n\t\t    \t\tfor (var j in data.faixa[i].categorias) {\r\n\t\t    \t\t\tcategorias[j] = data.faixa[i].categorias[j].nome;\r\n\t\t    \t\t}\r\n\t\t    \t \tfaixaStore.add({id: parseInt(data.faixa[i].idFaixa), nome: data.faixa[i].nome, categoria: categorias});\r\n\t\t    \t}\r\n\t\t    \tdisplayFaixaList();\r\n\t    \t}\r\n\t    \t\r\n\t    \trequest.onerror = function(event) {\r\n\t    \t\talert(\"erro: \"+event.target.errorCode);\r\n\t    \t}\r\n\t\t    //result.innerText = data.result; //display the result in an HTML element\r\n\t\t}, function(status) { //error detection....\r\n\t\t  alert('Something went wrong.');\r\n\t\t});\r\n\t\t\r\n\t\tgetJSON('http://curupira.local:8080/index.php?r=categoria/chrome-index').then(function(data) {\r\n\t\t\tvar transaction = db.transaction(['categoria'], 'readwrite');\r\n\t    \tvar categoriaStore = transaction.objectStore('categoria');\r\n\t    \tvar request = categoriaStore.clear();\r\n\t    \t// report the success of our clear operation\r\n\t    \t\r\n\t    \trequest.onsuccess = function(event) {\r\n\t    \t\tcategoriaStore.add({id: 0, nome: \"Personalizada\", ativo: \"true\"});\r\n\t\t    \tfor (var i in data.categoria) {\r\n\t\t    \t \tcategoriaStore.add({id: parseInt(data.categoria[i].idCategoria), nome: data.categoria[i].nome, ativo: \"false\"});\r\n\t\t    \t}\r\n\t\t    \tdisplayCategoriaList();\r\n\t    \t}\r\n\t    \t\r\n\t    \trequest.onerror = function(event) {\r\n\t    \t\talert(\"erro: \"+event.target.errorCode);\r\n\t    \t}\r\n\t    \t\r\n\t\t    //result.innerText = data.result; //display the result in an HTML element\r\n\t\t}, function(status) { //error detection....\r\n\t\t  alert('Something went wrong.');\r\n\t\t});\r\n\t\t\r\n\t\tgetJSON('http://curupira.local:8080/index.php?r=chave/chrome-index').then(function(data) {\r\n\t\t\tvar transaction = db.transaction(['palavra'], 'readwrite');\r\n\t    \tvar palavraStore = transaction.objectStore('palavra');\r\n\t    \tvar request = palavraStore.clear();\r\n\t    \t// report the success of our clear operation\r\n\t    \trequest.onsuccess = function(event) {\r\n\t\t    \tfor (var i in data.chave) {\r\n\t\t    \t\tvar categorias = new Array();\r\n\t\t    \t\tfor (var j in data.chave[i].categorias) {\r\n\t\t    \t\t\tcategorias[j] = data.chave[i].categorias[j].nome;\r\n\t\t    \t\t}\r\n\t\t    \t \tpalavraStore.add({id: parseInt(data.chave[i].idChave), palavra: data.chave[i].palavra, categoria: categorias, bloqueado: \"false\"});\r\n\t\t    \t}\r\n\t    \t}\r\n\t    \t\r\n\t    \trequest.onerror = function(event) {\r\n\t    \t\talert(\"erro: \"+event.target.errorCode);\r\n\t    \t}\r\n\t    \t\r\n\t\t    //result.innerText = data.result; //display the result in an HTML element\r\n\t\t}, function(status) { //error detection....\r\n\t\t  alert('Something went wrong.');\r\n\t\t});\r\n\t\t\r\n\t\tgetJSON('http://curupira.local:8080/index.php?r=url/chrome-index').then(function(data) {\r\n\t\t\tvar transaction = db.transaction(['site'], 'readwrite');\r\n\t    \tvar siteStore = transaction.objectStore('site');\r\n\t    \tvar request = siteStore.clear();\r\n\t    \t// report the success of our clear operation\r\n\t    \trequest.onsuccess = function(event) {\r\n\t    \t\t\r\n\t\t    \tfor (var i in data.site) {\r\n\t\t    \t\tvar categorias = new Array();\r\n\t\t    \t\tfor (var j in data.site[i].categorias) {\r\n\t\t    \t\t\tcategorias[j] = data.site[i].categorias[j].nome;\r\n\t\t    \t\t}\r\n\t\t    \t \tsiteStore.add({id: parseInt(data.site[i].idUrl), url: data.site[i].url, categoria: categorias, bloqueado: \"false\"});\r\n\t\t    \t}\r\n\t\t    \tlbStatus.innerHTML = \"Atualizado com sucesso!\";\r\n\t    \t}\r\n\t    \t\r\n\t    \trequest.onerror = function(event) {\r\n\t    \t\talert(\"erro: \"+event.target.errorCode);\r\n\t    \t}\r\n\t    \t\r\n\t\t    //result.innerText = data.result; //display the result in an HTML element\r\n\t\t}, function(status) { //error detection....\r\n\t\t  alert('Something went wrong.');\r\n\t\t});\r\n\t\t\r\n\t\tvar preferenciaTransaction = db.transaction(['preferencia'], 'readwrite');\r\n\t\tvar preferenciaStore = preferenciaTransaction.objectStore('preferencia');\r\n\t\tvar preferenciaRequest = preferenciaStore.get(1);\r\n\t\t\r\n\t\tpreferenciaRequest.onsuccess = function(evt) {\r\n\t\t\tvar value = preferenciaRequest.result;\r\n\t\t\tvar dataAtual = new Date();\r\n\t\t\t\t\r\n\t\t\tvalue.upData = dataAtual.toLocaleDateString();\t\t\t\r\n\t\t\tpreferenciaStore.put(value);\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {IDBObjectStore=} store\r\n */\r\nfunction displayPreferencia() {\r\n\tconsole.log(\"displayPreferencia\");\r\n\r\n\tvar transaction = db.transaction(['preferencia'], 'readonly');\r\n\tvar objectStore = transaction.objectStore('preferencia');\r\n\tvar request = objectStore.get(1);\r\n\r\n\tvar exUrl = document.getElementById('exUrl');\r\n\tvar exTitulo = document.getElementById('exTitulo');\r\n\tvar hoInicial = document.getElementById('hoInicial');\r\n\tvar hoFinal = document.getElementById('hoFinal');\r\n\tvar ativo = document.getElementById('botaoAtivar');\r\n\t\r\n\trequest.onsuccess = function(evt) {\r\n\t\tvar value = request.result;\r\n\t\t\t\r\n\t\texUrl.checked = value.exUrl;\r\n\t\texTitulo.checked = value.exTitulo;\r\n\t\thoInicial.value = value.hoInicial;\r\n\t\thoFinal.value = value.hoFinal;\r\n\t\tativo.checked = value.ativo;\r\n\t};\r\n}\r\n\r\n/**\r\n * @param {IDBObjectStore=} store\r\n */\r\nfunction displayFaixaList() {\r\n\tvar faixa_list = document.getElementById('faixaItems');\r\n\twhile(faixa_list.tBodies[0].hasChildNodes()){                \r\n\t\tfaixa_list.tBodies[0].removeChild(faixa_list.tBodies[0].firstChild);\r\n\t}\r\n\tconsole.log(\"displayFaixaList\");\r\n\r\n\tvar transaction = db.transaction(['faixa'], 'readonly');\r\n\tvar objectStore = transaction.objectStore('faixa');\r\n\tvar indice = objectStore.index('nome');\r\n \r\n\tindice.openCursor().onsuccess = function(evt) {\r\n\t\tvar cursor = evt.target.result;\r\n\t\t// If the cursor is pointing at something, ask for the data\r\n\t\tif (cursor) {\r\n\t\t\tconsole.log(\"displayFaixaList cursor:\", cursor);\r\n\t\t\tvar value = cursor.value;\r\n\t\t\t\r\n\t\t\tvar linha = faixa_list.tBodies[0].insertRow(-1);\r\n\t\t\tvar celula1 = linha.insertCell(-1);\r\n\t\t\tvar link1 = document.createElement (\"A\");\r\n\t\t\tlink1.value = value.nome;\r\n\t\t\tlink1.innerHTML = value.nome;\r\n\t\t\tlink1.setAttribute('data-categoria', value.categoria);\r\n\t\t\tcelula1.appendChild(link1);\r\n\t\t\tlink1.onclick = function(event) {\r\n\t\t\t\tselecionaPorFaixa(event);\r\n\t\t\t}\r\n\t\t\r\n\t\t\t// Move on to the next object in store\r\n\t\t\tcursor.continue();\r\n\t\t\r\n\t\t// This counter serves only to create distinct ids\r\n\t\t} else {\r\n\t\t\tconsole.log(\"No more entries: Site\");\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * @param {IDBObjectStore=} store\r\n */\r\nfunction displayCategoriaList() {\r\n\tvar categoria_list = document.getElementById('categoriaItems');\r\n\twhile(categoria_list.tBodies[0].hasChildNodes()){                \r\n\t\tcategoria_list.tBodies[0].removeChild(categoria_list.tBodies[0].firstChild);\r\n\t}\r\n\t\r\n\tconsole.log(\"displayCategoriaList\");\r\n\r\n\tvar transaction = db.transaction(['categoria'], 'readonly');\r\n\tvar objectStore = transaction.objectStore('categoria');\r\n\tvar indice = objectStore.index('nome');\r\n\r\n\tindice.openCursor().onsuccess = function(evt) {\r\n\t\tvar cursor = evt.target.result;\r\n\t\t\r\n\t\t// If the cursor is pointing at something, ask for the data\r\n\t\tif (cursor) {\r\n\t\t\tconsole.log(\"displayFaixaList cursor:\", cursor);\r\n\t\t\tvar value = cursor.value;\r\n\r\n\t\t\t//var list_item = $('<tr></tr>');\r\n\t\t\tvar linha = categoria_list.tBodies[0].insertRow(-1);\r\n\t\t\tvar celula1 = linha.insertCell(-1);\r\n\t\t    var celula2 = linha.insertCell(-1);\r\n\t\t    var ckCategoria = document.createElement(\"input\");\r\n\t\t    ckCategoria.type = \"checkbox\";\r\n\t\t    ckCategoria.checked = (value.ativo == \"true\");\r\n\t\t    ckCategoria.value = value.id;\r\n\t\t    ckCategoria.setAttribute('data-categoria', value.nome);\r\n\t\t    ckCategoria.onchange = function(event) {\r\n\t\t\t\tif (event.target.checked) {\r\n\t\t\t\t\tselecionaPorCategoria(event.target.getAttribute('data-categoria'), \"true\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tselecionaPorCategoria(event.target.getAttribute('data-categoria'), \"false\");\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t}\r\n\t\t    celula1.appendChild(ckCategoria);\r\n\t\t    var lbCategoria = document.createElement (\"label\");\r\n\t\t    lbCategoria.value = value.nome;\r\n\t\t    lbCategoria.innerHTML = value.nome;\r\n\t\t    celula2.appendChild(lbCategoria);\r\n\r\n\t\t    // Move on to the next object in store\r\n\t\t    cursor.continue();\r\n\t\t} else {\r\n\t\t\tconsole.log(\"No more entries: Categoria\");\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * @param {integer=} id\r\n * @param {boolean=} ativo\r\n * @param {boolean=} exUrl\r\n * @param {boolean=} exTitulo\r\n * @param {boolean=} exMeta\r\n * @param {boolean=} exConteudo\r\n * @param {time=} hoInicial\r\n * @param {time=} hoFinal\r\n */\r\nfunction updatePreferencia() {\r\n  console.log(\"updatePreferencia\");\r\n\r\n  if (typeof store == 'undefined')\r\n    store = getObjectStore(\"preferencia\", \"readwrite\");\r\n\r\n  var ativo = $('#botaoAtivar').prop('checked');\r\n  var exUrl = $('#exUrl').prop('checked');\r\n  var exTitulo = $('#exTitulo').prop('checked');\r\n  var exMeta = $('#exMeta').prop('checked');\r\n  var exConteudo = $('#exConteudo').prop('checked');\r\n  var hoInicial = $('#hoInicial').prop('value');\r\n  var hoFinal = $('#hoFinal').prop('value');\r\n\r\n  var req = store.get(1);\r\n  req.onsuccess = function(evt){\r\n    //var data = req.result;\r\n    var data = {};\r\n    data.ativo = ativo;\r\n    data.exUrl = exUrl;\r\n    data.exTitulo = exTitulo;\r\n    data.exMeta = exMeta;\r\n    data.exConteudo = exConteudo;\r\n    data.hoInicial = hoInicial;\r\n    data.hoFinal = hoFinal;\r\n    data.id = 1;\r\n    //do the update\r\n    var objRequest = store.put(data);\r\n    objRequest.onsuccess = function(ev){\r\n      console.log('Sucesso ao atualizar registro');\r\n      create_database(updateCategoria);\r\n      };\r\n    objRequest.onerror = function(ev){\r\n      console.log('Erro ao tentar atualizar registro');\r\n      };\r\n  };\r\n  req.onerror = function(evt){\r\n    console.log('Erro ao tentar obter registro');\r\n  };\r\n}\r\n\r\nfunction selecionaPorFaixa(event) {\r\n\tvar categorias = event.target.getAttribute('data-categoria').split(\",\");\r\n\tfor (var item in categorias) {\r\n\t\tselecionaPorCategoria(categorias[item], \"true\");\r\n\t}\r\n\tdisplayCategoriaList();\r\n}\r\n\r\nfunction selecionaPorCategoria(categoria, valor) {\r\n\tvar transaction = db.transaction(['site'], 'readwrite');\r\n\tvar objectStore = transaction.objectStore('site');\r\n\tvar indice = objectStore.index('categoria');\r\n\t\r\n\tvar keyRangeValue = IDBKeyRange.only([categoria]);\r\n\tindice.openCursor(keyRangeValue).onsuccess = function(evt) {\r\n\t\tvar cursor = evt.target.result;\r\n\t\t// If the cursor is pointing at something, ask for the data\r\n\t\tif (cursor) {\r\n\t\t\tvar value = cursor.value;\r\n\t\t\t\r\n\t\t\tvalue.bloqueado = valor;\r\n\t\t\t\r\n\t\t\tcursor.update(value);\r\n\t\t\t// Move on to the next object in store\r\n\t\t\tcursor.continue();\r\n\t\t\r\n\t\t// This counter serves only to create distinct ids\r\n\t\t} else {\r\n\t\t\tconsole.log(\"No more entries: Site\");\r\n\t\t}\r\n\t};\r\n\tativarCategoria(categoria, valor);\r\n}\r\n\r\nfunction ativarCategoria (categoria, valor) {\r\n\tvar transaction = db.transaction(['categoria'], 'readwrite');\r\n\tvar objectStore = transaction.objectStore('categoria');\r\n\tvar indice = objectStore.index('nome');\r\n\t\r\n\tvar keyRangeValue = IDBKeyRange.only(categoria);\r\n\tindice.openCursor(keyRangeValue).onsuccess = function(evt) {\r\n\t\tvar cursor = evt.target.result;\r\n\t\t// If the cursor is pointing at something, ask for the data\r\n\t\tif (cursor) {\r\n\t\t\tvar value = cursor.value;\r\n\t\t\t\r\n\t\t\tvalue.ativo = valor;\r\n\t\t\t\r\n\t\t\tcursor.update(value);\r\n\t\t\t// Move on to the next object in store\r\n\t\t\tcursor.continue();\r\n\t\t\r\n\t\t// This counter serves only to create distinct ids\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction getJSON(url) {\r\n\treturn new Promise(function(resolve, reject) {\r\n\t    var xhr = new XMLHttpRequest();\r\n\t    xhr.open('get', url, true);\r\n\t    xhr.responseType = 'json';\r\n\t    xhr.onload = function() {\r\n\t    \tvar status = xhr.status;\r\n\t    \tif (status == 200) {\r\n\t    \t\tresolve(xhr.response);\r\n\t    \t} else {\r\n\t    \t\treject(status);\r\n\t    \t}\r\n\t    };\r\n\t    xhr.send();\r\n\t  });\r\n}\n\n//# sourceURL=webpack://tourmaline-ext/./src/scripts/preferencias.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/scripts/preferencias.js"]();
/******/ 	
/******/ })()
;